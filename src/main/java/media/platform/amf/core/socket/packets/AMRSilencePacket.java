package media.platform.amf.core.socket.packets;

public class AMRSilencePacket {

    /**
     * AMR-WB silence packets
     */
    private static final byte[] AMRWB_SILENCE_M8 = {
            (byte)0x44, (byte)0x11, (byte)0x06, (byte)0x30, (byte)0x33, (byte)0xBE, (byte)0xCE, (byte)0xB3, (byte)0xA0, (byte)0xD3,
            (byte)0x00, (byte)0x00, (byte)0xEB, (byte)0x50, (byte)0x87, (byte)0xB4, (byte)0XFF, (byte)0xD6, (byte)0x42, (byte)0x40,
            (byte)0x18, (byte)0x08, (byte)0x1A, (byte)0xE5, (byte)0x02, (byte)0x2A, (byte)0x96, (byte)0x91, (byte)0x29, (byte)0x48,
            (byte)0x49, (byte)0xCB, (byte)0X52, (byte)0x22, (byte)0x89, (byte)0x06, (byte)0x78, (byte)0xC0, (byte)0x28, (byte)0x00,
            (byte)0xB1, (byte)0x18, (byte)0x8B, (byte)0x93, (byte)0x24, (byte)0xC6, (byte)0x58, (byte)0x74, (byte)0XAC, (byte)0x19,
            (byte)0x0D, (byte)0xD7, (byte)0xB0, (byte)0x5B, (byte)0x08, (byte)0x88, (byte)0xCB, (byte)0xBA, (byte)0xAF, (byte)0xF2,
            (byte)0x58
    };

    private static final byte[] AMRWB_SILENCE_M7 = {
            (byte)0x3C, (byte)0x11, (byte)0x06, (byte)0x30, (byte)0x22, (byte)0xAA, (byte)0x8A, (byte)0x93, (byte)0xA0, (byte)0xD3,
            (byte)0xAB, (byte)0x50, (byte)0x87, (byte)0xB4, (byte)0xF7, (byte)0xF6, (byte)0xDE, (byte)0x21, (byte)0x1D, (byte)0x98,
            (byte)0xD2, (byte)0xE5, (byte)0x0A, (byte)0x22, (byte)0x96, (byte)0x7A, (byte)0x09, (byte)0x82, (byte)0xD3, (byte)0x44,
            (byte)0x57, (byte)0x22, (byte)0xC9, (byte)0x04, (byte)0x20, (byte)0x80, (byte)0x09, (byte)0x41, (byte)0xDA, (byte)0x08,
            (byte)0x0B, (byte)0xCA, (byte)0xE4, (byte)0xE6, (byte)0x10, (byte)0xBC, (byte)0xAD, (byte)0x80, (byte)0x22, (byte)0xC0,
            (byte)0x99, (byte)0x72, (byte)0x79, (byte)0xAD, (byte)0xCF, (byte)0xCA, (byte)0xA3, (byte)0x3A, (byte)0x60
    };

    private static final byte[] AMRWB_SILENCE_M6 = {
            (byte)0x34, (byte)0x11, (byte)0x06, (byte)0x10, (byte)0x33, (byte)0xBE, (byte)0xCE, (byte)0x83, (byte)0xA0, (byte)0xD1,
            (byte)0xA9, (byte)0x50, (byte)0x8F, (byte)0xA4, (byte)0xF8, (byte)0x91, (byte)0x3B, (byte)0x3C, (byte)0xD7, (byte)0x20,
            (byte)0x99, (byte)0x04, (byte)0x43, (byte)0x79, (byte)0x51, (byte)0x70, (byte)0x0A, (byte)0xC2, (byte)0x58, (byte)0x22,
            (byte)0x14, (byte)0x04, (byte)0x07, (byte)0x88, (byte)0x66, (byte)0xB9, (byte)0x8D, (byte)0x76, (byte)0xB0, (byte)0xC9,
            (byte)0x16, (byte)0x94, (byte)0xF8, (byte)0x44, (byte)0x85, (byte)0x8C, (byte)0xA1, (byte)0xF0, (byte)0x19, (byte)0xCF,
            (byte)0x00
    };

    private static final byte[] AMRWB_SILENCE_M5 = {
            (byte)0x2C, (byte)0x11, (byte)0x06, (byte)0x10, (byte)0x33, (byte)0xB6, (byte)0xCE, (byte)0x93, (byte)0xA0, (byte)0xD3,
            (byte)0x2B, (byte)0x50, (byte)0x87, (byte)0x84, (byte)0xF9, (byte)0xB7, (byte)0x96, (byte)0xAA, (byte)0x1F, (byte)0x4A,
            (byte)0x92, (byte)0x41, (byte)0x88, (byte)0x2A, (byte)0x20, (byte)0x00, (byte)0x19, (byte)0x0C, (byte)0x01, (byte)0x41,
            (byte)0x46, (byte)0x0C, (byte)0xE6, (byte)0xA4, (byte)0x3C, (byte)0xA8, (byte)0x4A, (byte)0x8A, (byte)0x7A, (byte)0x0E,
            (byte)0xC0, (byte)0x83, (byte)0x3D, (byte)0x24, (byte)0x35, (byte)0x79, (byte)0xE8
    };

    private static final byte[] AMRWB_SILENCE_M4 = {
            (byte)0x24, (byte)0x11, (byte)0x06, (byte)0x10, (byte)0x22, (byte)0xA2, (byte)0x8A, (byte)0x83, (byte)0xA0, (byte)0xD3,
            (byte)0x2D, (byte)0x50, (byte)0x87, (byte)0x84, (byte)0xEB, (byte)0x19, (byte)0x3B, (byte)0x90, (byte)0x90, (byte)0x00,
            (byte)0x05, (byte)0x67, (byte)0x60, (byte)0x04, (byte)0x12, (byte)0x55, (byte)0x04, (byte)0x40, (byte)0x01, (byte)0x95,
            (byte)0x3A, (byte)0x96, (byte)0x21, (byte)0x60, (byte)0x61, (byte)0x85, (byte)0x5B, (byte)0x5D, (byte)0x28, (byte)0x00,
            (byte)0xF0
    };

    private static final byte[] AMRWB_SILENCE_M3 = {
            (byte)0x1C, (byte)0x11, (byte)0x06, (byte)0x00, (byte)0x33, (byte)0xB6, (byte)0xCE, (byte)0xA3, (byte)0xA0, (byte)0xD3,
            (byte)0xE9, (byte)0xD8, (byte)0x8F, (byte)0x94, (byte)0xE8, (byte)0x63, (byte)0x33, (byte)0x11, (byte)0x18, (byte)0x26,
            (byte)0x07, (byte)0x28, (byte)0x00, (byte)0x22, (byte)0x00, (byte)0x11, (byte)0xC2, (byte)0x44, (byte)0x50, (byte)0x4D,
            (byte)0x41, (byte)0x15, (byte)0x6F, (byte)0xC0, (byte)0x44, (byte)0x25, (byte)0x58
    };

    private static final byte[] AMRWB_SILENCE_M2 = {
            (byte)0x14, (byte)0x11, (byte)0x06, (byte)0x20, (byte)0x22, (byte)0xAE, (byte)0x8A, (byte)0xB3, (byte)0xA0, (byte)0xD1,
            (byte)0x2D, (byte)0x58, (byte)0x8F, (byte)0x84, (byte)0xF0, (byte)0x47, (byte)0xB8, (byte)0x02, (byte)0xC0, (byte)0xA2,
            (byte)0x48, (byte)0x42, (byte)0x86, (byte)0xF2, (byte)0x40, (byte)0x14, (byte)0x15, (byte)0x50, (byte)0x49, (byte)0x54,
            (byte)0x43, (byte)0x48, (byte)0xD8
    };

    private static final byte[] AMRWB_SILENCE_M1 = {
            (byte)0x0C, (byte)0x10, (byte)0x00, (byte)0x0F, (byte)0x00, (byte)0x0E, (byte)0xB3, (byte)0xA0, (byte)0xD7, (byte)0xA8,
            (byte)0x50, (byte)0x97, (byte)0x94, (byte)0x85, (byte)0x7A, (byte)0x86, (byte)0x86, (byte)0xC0, (byte)0x85, (byte)0x82,
            (byte)0x17, (byte)0x02, (byte)0x17, (byte)0x00
    };

    private static final byte[] AMRWB_SILENCE_M0 = {
            (byte)0x04, (byte)0x10, (byte)0x21, (byte)0x00, (byte)0x39, (byte)0x1D, (byte)0x37, (byte)0xD4, (byte)0x91, (byte)0x74,
            (byte)0x7C, (byte)0xC2, (byte)0x78, (byte)0xE8, (byte)0xE0, (byte)0x88, (byte)0xE2, (byte)0xE0
    };

    /**
     * AMR-NB silence packets
     */
    private static final byte[] AMRNB_SILENCE_M7 = {
            (byte)0x3C, (byte)0x91, (byte)0x17, (byte)0x16, (byte)0xBE, (byte)0x66, (byte)0x79, (byte)0xE1, (byte)0xE0, (byte)0x01,
            (byte)0xE7, (byte)0xAF, (byte)0xF0, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x80, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00
    };

    private static final byte[] AMRNB_SILENCE_M6 = {
            (byte)0x34, (byte)0xC6, (byte)0x1E, (byte)0x08, (byte)0x27, (byte)0x80, (byte)0x05, (byte)0x28, (byte)0x3E, (byte)0x40,
            (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
    };

    private static final byte[] AMRNB_SILENCE_M5 = {
            (byte)0x2C, (byte)0xD1, (byte)0x1A, (byte)0x7C, (byte)0x00, (byte)0x1E, (byte)0x79, (byte)0xFF, (byte)0xE1, (byte)0x82,
            (byte)0x67, (byte)0x80, (byte)0x1F, (byte)0xC0, (byte)0x03, (byte)0xFF, (byte)0xE8, (byte)0x20, (byte)0x82, (byte)0x00,
            (byte)0x00
    };

    private static final byte[] AMRNB_SILENCE_M4 = {
            (byte)0x24, (byte)0x63, (byte)0x3C, (byte)0x67, (byte)0xE0, (byte)0x00, (byte)0x1F, (byte)0xF5, (byte)0x01, (byte)0xF0,
            (byte)0xFC, (byte)0x3F, (byte)0x77, (byte)0x18, (byte)0x61, (byte)0x86, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
    };

    private static final byte[] AMRNB_SILENCE_M3 = {
            (byte)0x1C, (byte)0x47, (byte)0x95, (byte)0xF3, (byte)0xDF, (byte)0xE0, (byte)0x00, (byte)0x7A, (byte)0x1E, (byte)0x43,
            (byte)0xC3, (byte)0xC3, (byte)0xC0, (byte)0x00, (byte)0x00, (byte)0x3C, (byte)0x00, (byte)0x00
    };

    private static final byte[] AMRNB_SILENCE_M2 = {
            (byte)0x14, (byte)0x47, (byte)0x8D, (byte)0x79, (byte)0xFF, (byte)0xFF, (byte)0xE7, (byte)0xE7, (byte)0xEF, (byte)0x9F,
            (byte)0xFC, (byte)0xC0, (byte)0x40, (byte)0x04, (byte)0x0C, (byte)0xCC
    };

    private static final byte[] AMRNB_SILENCE_M1 = {
            (byte)0x0C, (byte)0xC6, (byte)0x3C, (byte)0xC7, (byte)0xFF, (byte)0xF0, (byte)0xF7, (byte)0xB7, (byte)0xEF, (byte)0x7F,
            (byte)0x3E, (byte)0x00, (byte)0xE6, (byte)0x06
    };

    private static final byte[] AMRNB_SILENCE_M0 = {
            (byte)0x04, (byte)0x63, (byte)0x3C, (byte)0xC7, (byte)0xF0, (byte)0x63, (byte)0x04, (byte)0x39, (byte)0xFF, (byte)0xE0,
            (byte)0x00, (byte)0x00, (byte)0x00
    };


    private static final byte[] AMRWB_SID = {
            (byte)0xf0, (byte)0x4c,
            (byte)0xe3, (byte)0xdf, (byte)0x3d, (byte)0xb0, (byte)0x17
    };

    private static final byte[] AMRNB_SID = {
            (byte)0xf0, (byte)0x44,
            (byte)0xe3, (byte)0x27, (byte)0x75, (byte)0x43, (byte)0x16
    };

    public static byte[] get(int vocoder, int mode) {
        byte[] buf = null;

        if (vocoder == Vocoder.VOCODER_AMR_WB) {

            /*
            switch (mode) {
                case 0:
                    buf = AMRWB_SILENCE_M0;
                    break;
                case 1:
                    buf = AMRWB_SILENCE_M1;
                    break;
                case 2:
                    buf = AMRWB_SILENCE_M2;
                    break;
                case 3:
                    buf = AMRWB_SILENCE_M3;
                    break;
                case 4:
                    buf = AMRWB_SILENCE_M4;
                    break;
                case 5:
                    buf = AMRWB_SILENCE_M5;
                    break;
                case 6:
                    buf = AMRWB_SILENCE_M6;
                    break;
                case 7:
                    buf = AMRWB_SILENCE_M7;
                    break;
                case 8:
                    buf = AMRWB_SILENCE_M8;
                    break;
            }
            */
            buf = AMRWB_SID;
        }
        else {
            /*
            switch (mode) {
                case 0:
                    buf = AMRNB_SILENCE_M0;
                    break;
                case 1:
                    buf = AMRNB_SILENCE_M1;
                    break;
                case 2:
                    buf = AMRNB_SILENCE_M2;
                    break;
                case 3:
                    buf = AMRNB_SILENCE_M3;
                    break;
                case 4:
                    buf = AMRNB_SILENCE_M4;
                    break;
                case 5:
                    buf = AMRNB_SILENCE_M5;
                    break;
                case 6:
                    buf = AMRNB_SILENCE_M6;
                    break;
                case 7:
                    buf = AMRNB_SILENCE_M7;
                    break;
            }
            */
            buf = AMRNB_SID;

        }

        return buf;
    }

}
